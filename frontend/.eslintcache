[{"C:\\Users\\dev\\workspace\\joyo-kanji-web\\frontend\\src\\components\\playground\\Main.js":"1","C:\\Users\\dev\\workspace\\joyo-kanji-web\\frontend\\src\\App.js":"2"},{"size":3628,"mtime":1610573034099,"results":"3","hashOfConfig":"4"},{"size":117,"mtime":1610436396492,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"tm1f0u",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dev\\workspace\\joyo-kanji-web\\frontend\\src\\components\\playground\\Main.js",["11","12"],"import React, { useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport axios from 'axios'\r\n\r\nconst Main = () => {\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const [kanjiList, setKanjiList] = useState([])\r\n\r\n  const getKanjiList = async () => {\r\n    const url = '/api/v1/get_kanji_list'\r\n    return await axios.get(url)\r\n  }\r\n\r\n  const getWordList = async (pk) => {\r\n    const url = '/api/v1/get_word_list'\r\n    return await axios.get(url, { params: { pk: pk } })\r\n  }\r\n\r\n  const showWord = async (pk, kanji) => {\r\n    const result = await getWordList(pk)\r\n    console.log('result = ', result)\r\n\r\n    if (result.status === 200) {\r\n      \r\n      let html = `\r\n        <h2 class=\"f1 mb-4\">\r\n          ${kanji}\r\n        </h2>\r\n      `\r\n\r\n      result.data.length === 0 ? (\r\n        html = '<div class=\"f2\">등록된 단어가 없습니다.</div>'\r\n      ) : (\r\n        result.data.map((item, idx) => {\r\n          html += `\r\n            <div class=\"word-box\">\r\n              <img class=\"word-img\" src=\"${item.fields.image}\">\r\n              <div class=\"word-txt\">\r\n                <span class=\"kanji\">${item.fields.word}</span>\r\n                <span class=\"hangul\">${item.fields.mean}</span>\r\n              </div>\r\n            </div>\r\n          `\r\n        })\r\n      )\r\n\r\n      MySwal.fire({\r\n        confirmButtonText: '확인',\r\n        confirmButtonColor: '#212529',\r\n        html: html\r\n      })\r\n    }\r\n  }\r\n\r\n  const getInitData = async () => {\r\n    const result = await getKanjiList()\r\n    console.log('result = ', result)\r\n    if (result.status === 200) {\r\n      setKanjiList(result.data)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (kanjiList.length === 0) {\r\n      getInitData()\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1 className=\"text-center mt-5 mb-4 f1\">상용한자 2136</h1>\r\n\r\n        <div className=\"table-responsive-lg\">\r\n          <table className=\"table table-borderless f2\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"text-center\" style={{width: '10%'}}>번호</th>\r\n                <th className=\"text-center\" style={{width: '10%'}}>뜻</th>\r\n                <th className=\"text-center\" style={{width: '10%'}}>한자</th>\r\n                <th className=\"text-center\" style={{width: '20%'}}>훈독</th>\r\n                <th className=\"text-center\" style={{width: '20%'}}>음독</th>\r\n                <th className=\"text-center\" style={{width: '10%'}}>단어</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                kanjiList.map((item, idx) => {\r\n                  return (\r\n                    <tr key={idx}>\r\n                      <th className=\"text-center\" scope=\"row\">{item.pk}</th>\r\n                      <td>{item.fields.mean}</td>\r\n                      <td className=\"text-center\">{item.fields.kanji}</td>\r\n                      <td>{item.fields.kunyomi}</td>\r\n                      <td>{item.fields.onyomi}</td>\r\n                      <td className=\"text-center\">\r\n                        <button\r\n                          className=\"btn btn-outline-light\"\r\n                          type=\"button\"\r\n                          onClick={() => showWord(item.pk, item.fields.kanji)}\r\n                        >\r\n                          단어\r\n                    </button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                })\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main;","C:\\Users\\dev\\workspace\\joyo-kanji-web\\frontend\\src\\App.js",[],{"ruleId":"13","severity":1,"message":"14","line":37,"column":37,"nodeType":"15","messageId":"16","endLine":37,"endColumn":39},{"ruleId":"17","severity":1,"message":"18","line":70,"column":6,"nodeType":"19","endLine":70,"endColumn":8,"suggestions":"20"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getInitData' and 'kanjiList.length'. Either include them or remove the dependency array.","ArrayExpression",["21"],{"desc":"22","fix":"23"},"Update the dependencies array to be: [getInitData, kanjiList.length]",{"range":"24","text":"25"},[1755,1757],"[getInitData, kanjiList.length]"]